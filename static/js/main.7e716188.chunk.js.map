{"version":3,"sources":["components/Reactlings.tsx","assets/logo.svg","components/Header.tsx","components/ProjectGrid.tsx","components/ProjectDetails.tsx","projects/00_HelloWorld/HelloWorld.tsx","projects/01_TodoList/TodoList.tsx","projects/02_Calculator/Calculator.tsx","index.tsx"],"names":["Projects","Header","id","src","logo","className","alt","Component","ProjectGrid","Object","values","this","props","map","project","index","onClick","OnClickCallback","ProjectDetails","state","SourceCodeArray","CodeEmbedLinks","forEach","url","fetch","then","response","a","ok","NewSourceCodeArray","text","push","setState","ReturnArrowCallback","xmlns","height","viewBox","width","d","fill","ProjectComponent","code","language","showLineNumbers","style","atomOneDarkReasonable","HelloWorld","TodoList","Calculator","Reactlings","ChangeDisplayedProject","bind","ResetDisplayedProject","value","newProjectComponent","newCodeEmbedLinks","undefined","keys","filter","key","isNaN","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e716188.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react'\n\n// Components //\nimport Header from './Header';\nimport ProjectGrid from './ProjectGrid';\nimport ProjectDetails from './ProjectDetails';\n\n// Projects //\nimport HelloWorld from '../projects/00_HelloWorld/HelloWorld';\nimport TodoList from '../projects/01_TodoList/TodoList';\nimport Calculator from '../projects/02_Calculator/Calculator';\n\nenum Projects {\n    HelloWorld,\n    TodoList,\n    Calculator\n}\n\ninterface IState {\n    ProjectComponent?: React.ReactChild;\n    CodeEmbedLinks?: Array<string>;\n}\n\nexport default class Reactlings extends Component<{}, IState> {\n    constructor(props: any) {\n        super(props);\n        this.ChangeDisplayedProject = this.ChangeDisplayedProject.bind(this);\n        this.ResetDisplayedProject = this.ResetDisplayedProject.bind(this);\n    }\n\n    ChangeDisplayedProject(value: string) {\n        let newProjectComponent : React.ReactChild | undefined;\n        let newCodeEmbedLinks : Array<string> | undefined;\n\n        switch(value) {\n            case \"HelloWorld\":\n                newProjectComponent = <HelloWorld />;\n                newCodeEmbedLinks = [\"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/00_HelloWorld/HelloWorld.tsx\"];\n                break;\n            case \"TodoList\":\n                newProjectComponent = <TodoList />;\n                newCodeEmbedLinks = [\"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/01_TodoList/TodoList.tsx\",\n                                     \"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/01_TodoList/TodoList2.tsx\"];\n                break;\n            case \"Calculator\":\n                newProjectComponent = <Calculator />;\n                newCodeEmbedLinks = [\"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/02_Calculator/Calculator.tsx\"];\n                break;\n        }\n\n        this.setState({\n            ProjectComponent: newProjectComponent,\n            CodeEmbedLinks: newCodeEmbedLinks\n        });\n    }\n\n    ResetDisplayedProject() {\n        this.setState({\n            ProjectComponent: undefined,\n            CodeEmbedLinks: undefined\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                {\n                    (this.state?.ProjectComponent == null || this.state?.CodeEmbedLinks == null) ?\n                    <ProjectGrid    Projects = {Object.keys(Projects).filter(key => isNaN(key as any))}\n                                    OnClickCallback = {this.ChangeDisplayedProject}\n                    /> :\n                    <ProjectDetails ProjectComponent = {this.state.ProjectComponent}\n                                    CodeEmbedLinks = {this.state.CodeEmbedLinks}\n                                    ReturnArrowCallback = {this.ResetDisplayedProject}\n                    />\n                }\n            </Fragment>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport './Header.scss';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div id=\"header\">\n                <img src={logo} className=\"logo spin-clockwise\" alt=\"React Logo\" />\n                <h1>Reactlings</h1>\n                <img src={logo} className=\"logo spin-counter-clockwise\" alt=\"React Logo\" />\n            </div>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './ProjectGrid.scss';\n\ninterface IProps {\n    Projects: Array<string>;\n    OnClickCallback: (value: string) => void;\n}\n\nexport default class ProjectGrid extends Component<IProps> {\n    render() {\n        return (\n            <Fragment>\n                <div id=\"project-grid\">\n                    {Object.values(this.props.Projects).map((project, index) => {\n                        return (<div key={index} onClick={() => this.props.OnClickCallback(project)}>{project}</div>);\n                    })}\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, { Component, Fragment} from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDarkReasonable } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './ProjectDetails.scss';\n\ninterface IProps {\n    ProjectComponent: React.ReactChild;\n    CodeEmbedLinks: Array<string>;\n    ReturnArrowCallback: () => void;\n}\n\ninterface IState {\n    SourceCodeArray: Array<string>;\n}\n\nexport default class ProjectDetails extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        \n        this.state = {\n            SourceCodeArray: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.CodeEmbedLinks.forEach((url: string) => {\n            fetch(url).then(async (response: Response) => {\n                if(response.ok) {\n                    let NewSourceCodeArray: Array<string> = this.state.SourceCodeArray;\n\n                    NewSourceCodeArray.push(await response.text());\n\n                    this.setState({\n                        SourceCodeArray: NewSourceCodeArray\n                    });\n                }\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div id=\"return-arrow\" onClick={this.props.ReturnArrowCallback}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"/></svg>\n                </div>\n                <div id=\"project\">{this.props.ProjectComponent}</div>\n                <div id=\"source-code\">\n                    {this.state.SourceCodeArray.map((code) => {\n                        return (\n                            <SyntaxHighlighter language=\"typescript\" showLineNumbers={true} style={atomOneDarkReasonable}>\n                                {code}\n                            </SyntaxHighlighter>\n                        )\n                    })}\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class HelloWorld extends Component {\n    render() {\n        return (\n            <div>Hello World!</div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class TodoList extends Component {\n    render() {\n        return (\n            <div>\n                TodoList\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Calculator extends Component {\n    render() {\n        return (\n            <div>Calculator Component</div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Reactlings from './components/Reactlings';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Reactlings />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}