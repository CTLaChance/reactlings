{"version":3,"sources":["assets/logo.svg","components/Header/Header.tsx","components/ProjectGrid/ProjectGrid.tsx","components/ProjectDetails/ProjectDetails.tsx","projects/00_HelloWorld/HelloWorld.tsx","projects/01_SlidingPuzzle/SlidingPuzzle.tsx","projects/02_LightsOutPuzzle/LightsOutPuzzle.tsx","components/Reactlings.tsx","index.tsx"],"names":["Header","id","src","logo","className","alt","Component","ProjectGrid","Object","values","this","props","Projects","map","project","index","onClick","GridItemClickCallback","ProjectDetails","state","SourceCodeArray","Promise","all","CodeEmbedLinks","url","a","fetch","then","response","text","NewSourceCodeArray","setState","ReturnArrowCallback","xmlns","height","viewBox","width","d","fill","ProjectComponent","code","language","showLineNumbers","style","atomOneDarkReasonable","HelloWorld","SlidingPuzzle","LightsOutPuzzle","LightArray","RandomizeGrid","row","column","NewLightArray","RowLowerBound","Math","max","RowUpperBound","min","length","ColumnLowerBound","ColumnUpperBound","i","j","NumberOfSteps","round","random","HandleClick","subarray","bool","Reactlings","Project","keys","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aad8d42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport logo from '../../assets/logo.svg';\nimport './Header.scss';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div id=\"header\">\n                <img src={logo} className=\"logo spin-clockwise\" alt=\"React Logo\" />\n                <h1>Reactlings</h1>\n                <img src={logo} className=\"logo spin-counter-clockwise\" alt=\"React Logo\" />\n            </div>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './ProjectGrid.scss';\n\ninterface IProps {\n    Projects: Array<string>;\n    GridItemClickCallback: (value: string) => void;\n}\n\nexport default class ProjectGrid extends Component<IProps> {\n    render() {\n        return (\n            <Fragment>\n                <div id=\"project-grid\">\n                    {Object.values(this.props.Projects).map((project, index) => {\n                        return (<div key={index} onClick={() => this.props.GridItemClickCallback(project)}>{project}</div>);\n                    })}\n                </div>\n            </Fragment>\n        )\n    }\n}\n","import React, { Component, Fragment} from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDarkReasonable } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './ProjectDetails.scss';\n\ninterface IProps {\n    ProjectComponent: React.ReactChild;\n    CodeEmbedLinks: Array<string>;\n    ReturnArrowCallback: () => void;\n}\n\ninterface IState {\n    SourceCodeArray: Array<string>;\n}\n\nexport default class ProjectDetails extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        \n        this.state = {\n            SourceCodeArray: []\n        }\n    }\n\n    async componentDidMount() {\n        let NewSourceCodeArray: Array<string> = await Promise.all(\n            this.props.CodeEmbedLinks.map(async (url: string) => {\n                return await fetch(url).then(async (response: Response) => {\n                        return await response.text();\n                });\n            })\n        )\n\n        this.setState({\n            SourceCodeArray: NewSourceCodeArray\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div id=\"return-arrow\" onClick={this.props.ReturnArrowCallback}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"/></svg>\n                </div>\n                <div id=\"project\">{this.props.ProjectComponent}</div>\n                <div id=\"source-code\">\n                    {this.state.SourceCodeArray.map((code, index) => {\n                        return (\n                            <SyntaxHighlighter key={index} language=\"typescript\" showLineNumbers={true} style={atomOneDarkReasonable}>\n                                {code}\n                            </SyntaxHighlighter>\n                        )\n                    })}\n                </div>\n            </Fragment>\n        )\n    }\n}\n","export default function HelloWorld() {\n    return <div>Hello World!</div>;\n}\n","import React, { Component } from 'react'\n\nexport default class SlidingPuzzle extends Component {\n    render() {\n        return (\n            <div>Sliding Puzzle!</div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './LightsOutPuzzle.scss';\n\ninterface IState {\n    LightArray: boolean[][];\n}\n\nexport default class LightsOutPuzzle extends Component<{}, IState> {\n    constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            LightArray: [[false, false, false],\n                         [false, false, false],\n                         [false, false, false]]\n        }\n\n        this.RandomizeGrid(5);\n    }\n\n    HandleClick(row: number, column: number) {\n        let NewLightArray: boolean[][] = this.state.LightArray;\n\n        // Toggle lights in a cross pattern from the selected cell.\n        let RowLowerBound = Math.max(row - 1, 0);\n        let RowUpperBound = Math.min(row + 1, NewLightArray.length - 1);\n        let ColumnLowerBound = Math.max(column - 1, 0);\n        let ColumnUpperBound = Math.min(column + 1, NewLightArray[row].length - 1)\n\n        for(let i = RowLowerBound; i <= RowUpperBound; i++) {\n            for(let j = ColumnLowerBound; j <= ColumnUpperBound; j++) {\n                // Ignore corners.\n                if (i !== row && j !== column) continue;\n                NewLightArray[i][j] = !NewLightArray[i][j];\n            }\n        }\n\n        this.setState({\n            LightArray: NewLightArray\n        });\n    }\n\n    RandomizeGrid(NumberOfSteps: number) {\n        for(let i = 0; i < NumberOfSteps; i++) {\n            let row = Math.round(Math.random() * (this.state.LightArray.length - 1));\n            let column = Math.round(Math.random() * (this.state.LightArray[0].length - 1));\n            this.HandleClick(row, column)\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"lights-out-puzzle\">\n                {this.state.LightArray.map((subarray, row) => {\n                    return subarray.map((bool, column) => {\n                        return <div key={`${row} - ${column}`} className={`${bool}`} onClick={() => this.HandleClick(row, column)} />\n                    })\n                })}\n            </div>\n        )\n    }\n}\n","import React, {Component, Fragment} from 'react'\n\n// Components //\nimport Header from './Header/Header';\nimport ProjectGrid from './ProjectGrid/ProjectGrid';\nimport ProjectDetails from './ProjectDetails/ProjectDetails';\n\n// Projects //\nimport HelloWorld from '../projects/00_HelloWorld/HelloWorld';\nimport SlidingPuzzle from '../projects/01_SlidingPuzzle/SlidingPuzzle';\nimport LightsOutPuzzle from '../projects/02_LightsOutPuzzle/LightsOutPuzzle';\n\nconst Projects: any = {\n    \"HelloWorld\": {\n        ProjectComponent: <HelloWorld />,\n        CodeEmbedLinks: [\"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/00_HelloWorld/HelloWorld.tsx\"]\n    },\n\n    \"Sliding Puzzle\": {\n        ProjectComponent: <SlidingPuzzle />,\n        CodeEmbedLinks: []\n    },\n\n    \"Lights Out Puzzle\": {\n        ProjectComponent: <LightsOutPuzzle />,\n        CodeEmbedLinks: [\"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/02_LightsOutPuzzle/LightsOutPuzzle.tsx\",\n                        \"https://raw.githubusercontent.com/CTLaChance/reactlings/main/src/projects/02_LightsOutPuzzle/LightsOutPuzzle.scss\"]\n    }\n};\n\ninterface IState {\n    Project?: string\n}\n\nexport default class Reactlings extends Component<{}, IState> {\n    state: IState = { Project: \"Lights Out Puzzle\"}\n\n    render() {\n        return (\n            <Fragment>\n                <Header />\n                {\n                    (this.state?.Project == null) ?\n                    <ProjectGrid    Projects = {Object.keys(Projects)}\n                                    GridItemClickCallback = {(project: string) => {this.setState({\n                                        Project: project\n                                    })}}\n                    /> :\n                    <ProjectDetails ProjectComponent = {Projects[this.state.Project].ProjectComponent}\n                                    CodeEmbedLinks = {Projects[this.state.Project].CodeEmbedLinks}\n                                    ReturnArrowCallback = {() => {this.setState({\n                                        Project: undefined\n                                    })}}\n                    />\n                }\n            </Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Reactlings from './components/Reactlings';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Reactlings />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}